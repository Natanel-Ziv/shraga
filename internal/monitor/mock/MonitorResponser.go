// Code generated by mockery v2.47.0. DO NOT EDIT.

package mock

import (
	monitor "shraga/internal/monitor"

	mock "github.com/stretchr/testify/mock"
)

// MonitorResponser is an autogenerated mock type for the MonitorResponser type
type MonitorResponser struct {
	mock.Mock
}

// GetBaseMonitorResponse provides a mock function with given fields:
func (_m *MonitorResponser) GetBaseMonitorResponse() *monitor.BaseMonitorResponse {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBaseMonitorResponse")
	}

	var r0 *monitor.BaseMonitorResponse
	if rf, ok := ret.Get(0).(func() *monitor.BaseMonitorResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*monitor.BaseMonitorResponse)
		}
	}

	return r0
}

// NewMonitorResponser creates a new instance of MonitorResponser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMonitorResponser(t interface {
	mock.TestingT
	Cleanup(func())
}) *MonitorResponser {
	mock := &MonitorResponser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
